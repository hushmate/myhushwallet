{"version":3,"sources":["components/pages/Wallet.jsx","components/lib/hdwallet.js","components/SideBarPanel.js","components/SideBarContent.js","components/pages/Faq.jsx","components/pages/Guide.jsx","components/pages/Contact.jsx","components/MainRouter.js","components/App.js","registerServiceWorker.js","index.js","components/lib/utils.js"],"names":["throttledAxiosGet","hushwalletutils","promiseDebounce","axios","get","UNLOCK_WALLET_TYPE","IMPORT_WALLET","HD_WALLET","PASTE_PRIV_KEY","ToolTipButton","props","_this","Object","C_Users_RIG_git_myhushwallet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_RIG_git_myhushwallet_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_RIG_git_myhushwallet_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggle","bind","C_Users_RIG_git_myhushwallet_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","tooltipOpen","setState","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","disabled","onClick","className","color","id","buttonText","placement","isOpen","target","tooltipText","React","Component","ZWalletGenerator","_this2","handlePasswordPhrase","passwordPhrase","privateKey","e","wifHash","settings","useTestNet","hushjs","config","testnet","wif","mainnet","pk","address","mkPrivKey","value","pkwif","privKeyToWIF","onChange","placeholder","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_11___default","text","react_icons_md___WEBPACK_IMPORTED_MODULE_17__","ZWalletUnlockKey","_this3","unlockHDWallet","loadWalletDat","toggleShowPassword","unlockPrivateKeys","showPassword","secretPhrase","invalidPrivateKey","secretPhraseTooShort","inputFileStyle","WebkitAppearance","cursor","handleUnlockPrivateKeys","hdwallet","phraseToHDWallet","setPrivateKeys","err","_this4","reader","FileReader","file","files","onloadend","privateKeys","result","match","map","x","replace","Buffer","from","toString","readAsBinaryString","_this5","unlockType","row","for","style","display","type","name","react_icons_fa__WEBPACK_IMPORTED_MODULE_18__","paddingTop","maxLength","ZWalletSettings","_this6","showSettings","toggleModalSettings","toggleShowSettings","ZWalletSelectUnlockType","setUnlockType","insightAPI","setInsightAPI","sm","check","publicAddresses","defaultChecked","compressPubKey","toggleCompressPubKey","showWalletGen","toggleShowWalletGen","toggleUseTestNet","ZAddressInfo","_this7","updateAddressInfo","updateAddressesInfo","getAddressBlockExplorerURL","retrieveAddressError","keys","forEach","key","undefined","urlAppend","explorerURL","info_url","then","response","data","setPublicAddressesKeyValue","balance","unconfirmedBalance","catch","error","interval","setInterval","clearInterval","_this8","addresses","totalConfirmed","totalUnconfirmed","push","privateKeyWIF","confirmedBalance","c_confirmed","Number","c_unconfirmed","isNaN","addressColumns","Header","accessor","resizable","Cell","href","react_table__WEBPACK_IMPORTED_MODULE_12__","columns","showPagination","minRows","length","ZSendHUSH","_this9","setProgressValue","setSendErrorMessage","handleUpdateSelectedAddress","handleUpdateRecipientAddress","handleUpdateAmount","handleCheckChanged","handleUpdateFee","handleSendHUSH","selectedAddress","recipientAddress","fee","amount","sentTxid","sendProgress","sendErrorMessage","confirmSend","checked","v","msg","senderAddress","satoshisToSend","Math","round","satoshisfeesToSend","errString","parseInt","senderPrivateKey","prevTxURL","infoURL","sendRawTxURL","satoshisSoFar","history","recipients","satoshis","tx_resp","tx_data","info_resp","i","confirmations","concat","txid","vout","scriptPubKey","refundSatoshis","txObj","transaction","createRawTx","signTx","txHexString","serializeTx","post","rawtx","sendtx_resp","hushTxLink","hushtx","split","s","sendAddresses","_this10","cSelected","_this11","textAlign","vertical","onRadioBtnClick","active","ZPrintableKeys","_this12","selectedPublicAddress","selectedPrivateKey","console","log","paddingBottom","qrcode_react__WEBPACK_IMPORTED_MODULE_9___default","ZWalletTabs","_this13","toggleTabs","savePrivateKeys","activeTab","tab","now","Date","toISOString","fileStr","pjson","version","pkBlob","Blob","FileSaver","saveAs","_this14","tabs","classnames","tabId","ZWallet","_this15","resetKeys","_privKeyToAddr","WIFToPrivKey","pubKey","privKeyToPubKey","pubKeyHash","pubKeyToAddr","c_pk","c_pk_wif","setPublicAddresses","handleUnlockingKeys","pa","newPublicAddresses","uri","_settings","t","b","bitcoinjs","require","bip32utils","__webpack_exports__","phraseStr","seedHex","hdNode","HDNode","fromSeedHex","chain","Chain","k","next","getAll","derive","keyPair","toWIF","styles","root","fontWeight","header","backgroundColor","padding","fontSize","SideBarPanel","rootStyle","objectSpread","react_default","title","children","sidebar","width","height","flexDirection","sidebarLink","textDecoration","divider","margin","content","flexGrow","SidebarContent","components_SideBarPanel","Link","to","ZFaq","reactstrap_es","ZGuide","ZContact","MainRouter","Switch","Route","exact","path","component","Wallet","Faq","Getting_started","Contact","library","add","fas","far","fab","contentHeaderMenuLink","headerIcons","contentHeaderTitle","float","mql","window","matchMedia","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","docked","matches","open","transitions","touch","shadow","pullRight","touchHandleWidth","dragToggleDistance","mediaQueryChanged","assertThisInitialized","toggleOpen","onSetOpen","addListener","removeListener","ev","preventDefault","SideBarContent","contentHeader","react_fontawesome_index_es","icon","sidebarProps","dist_modules_default","components_MainRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","render","BrowserRouter","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","bluebird__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","bluebird__WEBPACK_IMPORTED_MODULE_0___default","n","fn","delay","count","working","queue","work","Promise","tap","shift","apply","args","arguments","resolve","url","param","substr"],"mappings":"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","file":"static/js/main.a306f95f.chunk.js","sourcesContent":["import { Alert, Form, FormText, ButtonGroup, UncontrolledAlert, Tooltip, CardBlock, CardFooter, Modal, ModalHeader, ModalBody, ModalFooter, ListGroup, ListGroupItem, Badge, Progress, FormGroup, Label, Container, Jumbotron, TabContent, InputGroup, Input, InputGroupAddon, InputGroupButton, Table, TabPane, Nav, NavItem, NavLink, Card, CardSubtitle, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\n\nimport axios from 'axios'\nimport React from 'react'\nimport QRCode from 'qrcode.react';\nimport classnames from 'classnames'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport ReactTable from 'react-table'\nimport hushjs from 'hushjs'\nimport hushwalletutils from '../lib/utils.js'\nimport hdwallet from '../lib/hdwallet.js'\nimport FileSaver from 'file-saver'\n\n\n//new import style\nimport { MdContentCopy, MdSettings } from 'react-icons/md/'\nimport { FaRedo, FaUnlock, FaEyeSlash, FaEye } from 'react-icons/fa'\n\nimport pjson from '../../../package.json'\n\n// Throttled GET request to prevent unusable lag\nconst throttledAxiosGet = hushwalletutils.promiseDebounce(axios.get, 1000, 5)\n\n// Unlock wallet enum\nvar UNLOCK_WALLET_TYPE = {\n  IMPORT_WALLET: 0,\n  HD_WALLET: 1,\n  PASTE_PRIV_KEY: 2\n  }\n\n// Components\nclass ToolTipButton extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      tooltipOpen: false\n    }\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen\n    })\n  }\n\n  render() {\n    return (\n      <span>\n        <Button disabled={this.props.disabled} onClick={this.props.onClick} className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.buttonText}\n        </Button>\n        <Tooltip placement=\"top\" isOpen={this.state.tooltipOpen} target={'Tooltip-' + this.props.id} toggle={this.toggle}>\n          {this.props.tooltipText}\n        </Tooltip>\n      </span>\n    )\n  }\n}\n\nclass ZWalletGenerator extends React.Component {\n  constructor(props) {\n    super(props)    \n    \n    this.handlePasswordPhrase = this.handlePasswordPhrase.bind(this);\n    this.state = {\n      passwordPhrase: '',\n      privateKey: ''\n    }\n  }\n\n  handlePasswordPhrase(e){\n    // What wif format do we use?\n    var wifHash = this.props.settings.useTestNet ? hushjs.config.testnet.wif : hushjs.config.mainnet.wif\n\n    var pk = hushjs.address.mkPrivKey(e.target.value)\n    var pkwif = hushjs.address.privKeyToWIF(pk, true, wifHash)\n\n    if (e.target.value === ''){\n      pkwif = ''\n    }\n\n    this.setState({\n      privateKey: pkwif\n    })\n  }\n  \n  render () {\n    return (\n      <div>                  \n        <h3 className='display-6'>Generate New Address</h3>\n        <br/>\n        <InputGroup>          \n          <Input onChange={this.handlePasswordPhrase} placeholder=\"Password phrase. Do NOT forget to save this! Use >15 words to be safe.\" />            \n        </InputGroup>\n        <br/>\n        <InputGroup>                      \n          <Input value={this.state.privateKey} placeholder=\"Private key generated from password phrase\" />              \n          <InputGroupButton>\n            <CopyToClipboard text={this.state.privateKey}>\n              <Button><MdContentCopy/></Button>\n            </CopyToClipboard>\n          </InputGroupButton>\n        </InputGroup>        \n      </div>\n    )\n  }\n}\n\n\nclass ZWalletUnlockKey extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.unlockHDWallet = this.unlockHDWallet.bind(this)\n    this.loadWalletDat = this.loadWalletDat.bind(this)\n    this.toggleShowPassword = this.toggleShowPassword.bind(this)\n    this.unlockPrivateKeys = this.unlockPrivateKeys.bind(this)    \n\n    this.state = {\n      showPassword: false,\n      secretPhrase: '',\n      invalidPrivateKey: false,\n      secretPhraseTooShort: false,      \n\n      // Style for input button\n      inputFileStyle: {\n          WebkitAppearance: 'button',\n          cursor: 'pointer'\n      }   \n    }\n  }  \n\n  toggleShowPassword(){\n    this.setState({\n      showPassword: !this.state.showPassword\n    })\n  }\n\n  unlockPrivateKeys(){\n    // Success = return 0\n    const success = this.props.handleUnlockPrivateKeys() === 0        \n\n    if (!success){\n      this.setState({\n        invalidPrivateKey: true, \n      })\n    }\n  }\n\n  unlockHDWallet(){\n    try{\n      // Generate private keys from secret phrase\n      const pk = hdwallet.phraseToHDWallet(this.state.secretPhrase)\n\n      this.setState({\n        secretPhraseTooShort: false\n      })\n\n      // Set private key and unlock them (we know it'll work so no need to validate)\n      this.props.setPrivateKeys(pk, true)\n    } catch (err){\n      this.setState({\n        secretPhraseTooShort: true\n      })\n    }\n  }\n\n  loadWalletDat(e){    \n    var reader = new FileReader()\n    var file = e.target.files[0]\n\n    // Read file callback function\n    reader.onloadend = () => {\n      // Get reader results in bytes\n      var dataHexStr = reader.result\n\n      // Retrieve private keys from wallet.dat\n      // Source: https://gist.github.com/moocowmoo/a715c80399bb202a65955771c465530c\n      var re = /\\x30\\x81\\xD3\\x02\\x01\\x01\\x04\\x20(.{32})/gm\n      var privateKeys = dataHexStr.match(re)\n      privateKeys = privateKeys.map(function(x) {\n        x = x.replace('\\x30\\x81\\xD3\\x02\\x01\\x01\\x04\\x20', '')\n        x = Buffer.from(x, 'latin1').toString('hex')\n        return x\n      })      \n\n      // Set private key\n      this.props.setPrivateKeys(privateKeys)\n\n      // Unlock private key\n      const success = this.props.handleUnlockPrivateKeys() === 0\n      \n      if (!success){\n        this.setState({\n          invalidPrivateKey: true, \n        })\n      }\n    }\n\n    // Read file\n    reader.readAsBinaryString(file)\n  }\n\n  render () {\n    if (this.props.unlockType == UNLOCK_WALLET_TYPE.IMPORT_WALLET){\n      return (\n        <Form>\n          <FormGroup row>            \n            <Col>\n              {this.state.invalidPrivateKey ? <Alert color=\"danger\"><strong>Error.</strong>&nbsp;Keys in files are corrupted</Alert> : ''}\n              <Label for=\"walletDatFile\" className=\"btn btn-block btn-secondary\" style={this.state.inputFileStyle}>Select wallet.dat file\n                <Input\n                  style={{display: 'none'}}\n                  type=\"file\"                 \n                  name=\"file\"\n                  id=\"walletDatFile\"                \n                  onChange={this.loadWalletDat}\n                />\n              </Label>\n              <FormText color=\"muted\">\n                For Windows, it should be in %APPDATA%/Roaming/Hush<br/>\n                For Mac/Linux, it should be in ~/.Hush\n              </FormText>\n            </Col>\n          </FormGroup>\n        </Form>\n      )\n    }\n\n    else if (this.props.unlockType == UNLOCK_WALLET_TYPE.PASTE_PRIV_KEY){\n      return (\n        <div>\n          {this.state.invalidPrivateKey ? <Alert color=\"danger\"><strong>Error.</strong>&nbsp;Invalid private key</Alert> : ''}\n          <InputGroup>                                       \n            <InputGroupButton>\n              <Button id={4}\n                onClick={this.toggleShowPassword}             \n              >{this.state.showPassword? <FaEye/> : <FaEyeSlash/>}</Button>\n            </InputGroupButton>\n            <Input\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              onChange={(e) => this.props.setPrivateKeys([e.target.value])} // Set it in a list so we can map over it later\n              placeholder=\"Private key\"\n            />\n          </InputGroup>\n          <div style={{paddingTop: '8px'}}>\n            <Button color=\"secondary\" className=\"btn-block\" onClick={this.unlockPrivateKeys}>Unlock Private Key</Button>\n          </div>\n        </div>\n      )\n    }\n\n    else if (this.props.unlockType == UNLOCK_WALLET_TYPE.HD_WALLET){\n      return (\n        <div>\n          <Alert color=\"warning\"><strong>Warning.</strong>&nbsp;Make sure you have saved your secret phrase somewhere.</Alert>\n          {this.state.secretPhraseTooShort ? <Alert color=\"danger\"><strong>Error.</strong>&nbsp;Secret phrase too short</Alert> : '' }\n          <InputGroup>                                       \n            <InputGroupButton>\n              <Button id={7}\n                onClick={this.toggleShowPassword}                \n              >{this.state.showPassword? <FaEye/> : <FaEyeSlash/>}</Button>\n            </InputGroupButton>\n            <Input\n              type={this.state.showPassword ? \"text\" : \"password\"}\n              maxLength=\"64\"\n              onChange={(e) => this.setState({secretPhrase: e.target.value})}\n              placeholder=\"Secret phrase. e.g. cash cow money heros cardboard money bag late green\"\n            />                        \n          </InputGroup>\n          <div style={{paddingTop: '8px'}}>\n            <Button color=\"secondary\" className=\"btn-block\" onClick={this.unlockHDWallet}>Generate Wallet / Login</Button>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nclass ZWalletSettings extends React.Component {\n  render () {\n    return (\n      <Modal isOpen={this.props.settings.showSettings} toggle={this.props.toggleModalSettings}>\n        <ModalHeader toggle={this.props.toggleShowSettings}>Hush Wallet Settings</ModalHeader>                  \n        <ModalBody>\n          <ZWalletSelectUnlockType\n              setUnlockType={this.props.setUnlockType}\n              unlockType={this.props.settings.unlockType}\n            />  \n        </ModalBody>\n        <ModalBody>                              \n          <InputGroup>\n            <InputGroupAddon>Insight API</InputGroupAddon>\n            <Input \n              value={this.props.settings.insightAPI}\n              onChange={(e) => this.props.setInsightAPI(e.target.value)}\n            />\n          </InputGroup><br/>\n          <Row>\n            <Col sm=\"6\">\n              <Label check>\n                <Input\n                  disabled={!(this.props.publicAddresses === null)}\n                  defaultChecked={this.props.settings.compressPubKey} type=\"checkbox\" \n                  onChange={this.props.toggleCompressPubKey}\n                />{' '}\n                Compress Public Key\n              </Label>\n            </Col>\n            <Col sm=\"6\">\n              <Label check>\n                <Input                                    \n                  defaultChecked={this.props.settings.showWalletGen} type=\"checkbox\" \n                  onChange={this.props.toggleShowWalletGen}\n                />{' '}\n                Show Address Generator\n              </Label>\n            </Col>\n          </Row>\n        </ModalBody>        \n        <ModalFooter>\n          <Label>\n            <Input\n              disabled={!(this.props.publicAddresses === null)}\n              defaultChecked={this.props.settings.useTestNet} type=\"checkbox\" \n              onChange={this.props.toggleUseTestNet}\n            />{' '}\n            testnet\n          </Label>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n\nclass ZAddressInfo extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.updateAddressInfo = this.updateAddressInfo.bind(this)\n    this.updateAddressesInfo = this.updateAddressesInfo.bind(this)\n    this.getAddressBlockExplorerURL = this.getAddressBlockExplorerURL.bind(this)    \n\n    this.state = {            \n      retrieveAddressError: false      \n    }\n  }\n\n  // Updates all address info\n  updateAddressesInfo() {    \n    // The key is the address\n    // Value is the private key\n    Object.keys(this.props.publicAddresses).forEach(function(key) {\n      if (key !== undefined){\n        this.updateAddressInfo(key)\n      }\n    }.bind(this))    \n  }\n\n  // Gets the blockchain explorer URL for an address\n  getAddressBlockExplorerURL(address) {\n    return hushwalletutils.urlAppend(this.props.settings.explorerURL, 'address/') + address\n  }\n\n  // Updates a address info\n  updateAddressInfo(address) {\n    // GET request to URL\n    var info_url = hushwalletutils.urlAppend(this.props.settings.insightAPI, 'addr/')\n    info_url = hushwalletutils.urlAppend(info_url, address + '?noTxList=1')    \n        \n    throttledAxiosGet(info_url)\n    .then(function (response){\n      var data = response.data;\n\n      this.props.setPublicAddressesKeyValue(address, 'confirmedBalance', data.balance)\n      this.props.setPublicAddressesKeyValue(address, 'unconfirmedBalance', data.unconfirmedBalance)\n      this.setState({\n        retrieveAddressError: false\n      })\n\n    }.bind(this))\n    .catch(function (error){\n      this.setState({\n        retrieveAddressError: true\n      })\n    }.bind(this))\n  }\n\n  componentDidMount() {\n    // Run immediately\n    this.updateAddressesInfo()\n\n    // Update every 30 seconds    \n    this.interval = setInterval(this.updateAddressesInfo, 300000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  render() {   \n    // Key is the address\n    var addresses = [];\n    var totalConfirmed = 0.0;\n    var totalUnconfirmed = 0.0;\n    Object.keys(this.props.publicAddresses).forEach(function(key) {\n      if (key !== undefined){\n        // Add to address    \n        addresses.push(\n          {\n            address: key,\n            privateKeyWIF: this.props.publicAddresses[key].privateKeyWIF,\n            confirmedBalance: this.props.publicAddresses[key].confirmedBalance,\n            unconfirmedBalance: this.props.publicAddresses[key].unconfirmedBalance\n          }\n        )\n\n        const c_confirmed = Number(this.props.publicAddresses[key].confirmedBalance)\n        const c_unconfirmed = Number(this.props.publicAddresses[key].unconfirmedBalance)\n        if (!isNaN(c_confirmed)){\n          totalConfirmed += c_confirmed\n        }\n\n        if (!isNaN(c_unconfirmed)){\n          totalUnconfirmed += c_unconfirmed\n        }\n      }\n    }.bind(this))\n\n    const addressColumns = [{\n      Header: 'Address',\n      accessor: 'address',      \n      resizable: true,\n      Cell: props => <a href={this.getAddressBlockExplorerURL(props.value)}>{props.value}</a>\n    }, {\n      Header: 'Confirmed',\n      accessor: 'confirmedBalance',\n      Cell: props => <span className='number'>{props.value}</span>\n    }, {\n      Header: 'Unconfirmed',\n      accessor: 'unconfirmedBalance',\n      Cell: props => <span className='number'>{props.value}</span>\n    }]\n\n    return (\n      <Row>\n        <Col>     \n          <Card>\n            <CardBlock>                                                          \n              {this.state.retrieveAddressError ?\n              <Alert color=\"danger\">Error connecting to the Insight API. Double check the Insight API supplied in settings.</Alert>\n              :\n              <Alert color=\"warning\">The balance displayed here is dependent on the insight node.<br/>Automatically updates every 5 minutes. Alternatively, you can <a href=\"#\" onClick={() => this.updateAddressesInfo()}>forcefully refresh</a> them.</Alert>\n              }                                          \n            </CardBlock>\n          </Card>  \n          <Card>\n            <CardBlock>\n              <ReactTable\n                columns={[{\n                  Header: 'Total Confirmed',\n                  accessor: 'totalConfirmed',\n                  Cell: props => <span className='number'>{props.value}</span>\n                }, {\n                  Header: 'Total Unconfirmed',\n                  accessor: 'totalUnconfirmed',\n                  Cell: props => <span className='number'>{props.value}</span>\n                }]}\n\n                data={[\n                  {\n                    totalConfirmed: totalConfirmed,\n                    totalUnconfirmed: totalUnconfirmed\n                  }\n                ]}\n\n                showPagination={false}\n\n                minRows={1}\n              />\n            </CardBlock>\n          </Card>          \n          <Card>\n            <CardBlock>                                            \n              <ReactTable\n                data={addresses} columns={addressColumns}\n                minRows={addresses.length > 20 ? 20 : addresses.length}\n                showPagination={addresses.length > 20}\n              />\n            </CardBlock>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass ZSendHUSH extends React.Component {\n  constructor(props) {\n    super(props)    \n    \n    this.setProgressValue = this.setProgressValue.bind(this);\n    this.setSendErrorMessage = this.setSendErrorMessage.bind(this);    \n    this.handleUpdateSelectedAddress = this.handleUpdateSelectedAddress.bind(this);\n    this.handleUpdateRecipientAddress = this.handleUpdateRecipientAddress.bind(this);\n    this.handleUpdateAmount = this.handleUpdateAmount.bind(this);\n    this.handleCheckChanged = this.handleCheckChanged.bind(this);\n    this.handleUpdateFee = this.handleUpdateFee.bind(this);\n    this.handleSendHUSH = this.handleSendHUSH.bind(this);    \n\n    this.state = {\n      selectedAddress: '', // which address did we select\n      recipientAddress: '',\n      fee: '',\n      amount: '',                        \n      sentTxid: '', // Whats the send txid\n      sendProgress: 0, // Progress bar, 100 to indicate complete\n      sendErrorMessage: '',\n      confirmSend: false,\n    }\n  }\n  \n  handleUpdateSelectedAddress(e) {    \n    this.setState({\n      selectedAddress: e.target.value\n    })\n  }\n\n  handleUpdateRecipientAddress(e) {\n    this.setState({\n      recipientAddress: e.target.value\n    })\n  }\n\n  handleUpdateFee(e) {\n    this.setState({\n      fee: e.target.value\n    })\n  }\n\n  handleUpdateAmount(e) {    \n    this.setState({\n      amount: e.target.value\n    })\n  }\n\n  handleCheckChanged(e){    \n    this.setState({\n      confirmSend: e.target.checked\n    })\n  }\n\n  setProgressValue(v){\n    this.setState({\n      sendProgress: v\n    })\n  }\n\n  setSendErrorMessage(msg){\n    this.setState({\n      sendErrorMessage: msg\n    })\n  }\n\n  handleSendHUSH(){      \n    const value = this.state.amount;\n    const fee = this.state.fee;\n    const recipientAddress = this.state.recipientAddress;\n    const senderAddress = this.state.selectedAddress;\n\n    // Convert how much we wanna send\n    // to satoshis\n    const satoshisToSend = Math.round(value * 100000000)\n    const satoshisfeesToSend = Math.round(fee * 100000000)        \n    \n    // Reset hush send progress and error message\n    this.setProgressValue(1)\n    this.setSendErrorMessage('')\n\n    // Error strings\n    var errString = ''\n\n    // Validation    \n    if (senderAddress === ''){\n      errString += '`From Address` field can\\'t be empty.;'\n    }\n\n    if (recipientAddress.length !== 35) {\n      errString += 'Invalid address. Only transparent addresses are supported at this point in time.;'\n    }\n\n    if (typeof parseInt(value) !== 'number' || value === ''){\n      errString += 'Invalid amount.;'\n    }\n\n    // Can't send 0 satoshis\n    if (satoshisToSend <= 0){\n      errString += 'Amount must be greater than 0.;'      \n    }\n\n    if (typeof parseInt(fee) !== 'number' || fee === ''){\n      errString += 'Invalid fee.;'\n    }\n\n    if (errString !== ''){\n      this.setSendErrorMessage(errString)\n      this.setProgressValue(0)\n      return\n    }\n\n    // Private key\n    const senderPrivateKey = this.props.publicAddresses[senderAddress].privateKey;\n\n    // Get previous transactions\n    const prevTxURL = hushwalletutils.urlAppend(this.props.settings.insightAPI, 'addr/') + senderAddress + '/utxo'\n    const infoURL = hushwalletutils.urlAppend(this.props.settings.insightAPI, 'status?q=getInfo')\n    const sendRawTxURL = hushwalletutils.urlAppend(this.props.settings.insightAPI, 'tx/send')\n\n    // Building our transaction TXOBJ\n    // How many satoshis do we have so far\n    var satoshisSoFar = 0\n    var history = []\n    var recipients = [{address: recipientAddress, satoshis: satoshisToSend}]\n\n    // Get transactions and info\n    axios.get(prevTxURL)\n    .then(function (tx_resp){\n      this.setProgressValue(25)\n      \n      const tx_data = tx_resp.data      \n\n      axios.get(infoURL)\n      .then(function (info_resp){\n        this.setProgressValue(50)\n        const info_data = info_resp.data\n\n\n          // Iterate through each utxo\n          // append it to history\n          for (var i = 0; i < tx_data.length; i ++){\n            if (tx_data[i].confirmations == 0){\n              continue;\n            }\n\n            history = history.concat({\n              txid: tx_data[i].txid,\n              vout: tx_data[i].vout,\n              scriptPubKey: tx_data[i].scriptPubKey,            \n            });\n            \n            // How many satoshis do we have so far\n            satoshisSoFar = satoshisSoFar + tx_data[i].satoshis;\n            if (satoshisSoFar >= satoshisToSend + satoshisfeesToSend){\n              break;\n            }\n          }\n\n          // If we don't have enough address\n          // fail and tell user\n          if (satoshisSoFar < satoshisToSend + satoshisfeesToSend){            \n            this.setSendErrorMessage('Not enough confirmed HUSH in account to perform transaction')\n            this.setProgressValue(0)          \n          }\n\n          // If we don't have exact amount\n          // Refund remaining to current address\n          if (satoshisSoFar !== satoshisToSend + satoshisfeesToSend){\n            var refundSatoshis = satoshisSoFar - satoshisToSend - satoshisfeesToSend\n            recipients = recipients.concat({address: senderAddress, satoshis: refundSatoshis})\n          }\n\n          // Create transaction\n          var txObj = hushjs.transaction.createRawTx(history, recipients)\n\n          // Sign each history transcation          \n          for (var i = 0; i < history.length; i ++){\n            txObj = hushjs.transaction.signTx(txObj, i, senderPrivateKey, this.props.settings.compressPubKey)\n          }\n\n          // Convert it to hex string\n          const txHexString = hushjs.transaction.serializeTx(txObj)\n\n          axios.post(sendRawTxURL, {rawtx: txHexString})\n          .then(function(sendtx_resp){         \n            this.setState({\n              sendProgress: 100,\n              sentTxid: sendtx_resp.data.txid\n            })\n          }.bind(this))\n          .catch(function(error) {            \n            this.setSendErrorMessage(error + '')\n            this.setProgressValue(0)\n            return\n          }.bind(this))\n        }.bind(this))\n      }.bind(this))\n    .catch(function(error){      \n      this.setSendErrorMessage(error)\n      this.setProgressValue(0)\n      return\n    }.bind(this));\n  } \n\n  render() {\n    // If send was successful\n    var hushTxLink\n    if (this.state.sendProgress === 100){\n      var hushtx = hushwalletutils.urlAppend(this.props.settings.explorerURL, 'tx/') + this.state.sentTxid\n      hushTxLink = (\n        <Alert color=\"success\">\n        <strong>HUSH successfully sent!</strong> <a href={hushtx}>Click here to view your transaction</a>\n        </Alert>\n      )      \n    }\n\n    // Else show error why\n    else if (this.state.sendErrorMessage !== ''){\n      hushTxLink = (\n        this.state.sendErrorMessage.split(';').map(function (s) {\n          if (s !== ''){\n            return (\n              <Alert color=\"danger\">\n              <strong>Error.</strong> {s}\n              </Alert>\n            )\n          }\n        })\n      )      \n    }\n\n    // Send addresses\n    // Key is the address btw\n    var sendAddresses = [];\n    Object.keys(this.props.publicAddresses).forEach(function(key) {\n      if (key !== undefined){        \n        sendAddresses.push(\n          <option value={key}>[{this.props.publicAddresses[key].confirmedBalance}] - {key}</option>                                       \n        )\n      }\n    }.bind(this))\n\n    return (\n      <Row>\n        <Col>\n          <Card>\n            <CardBlock>       \n              <Alert color=\"danger\">ALWAYS VALIDATE YOUR DESTINATION ADDRESS BY SENDING SMALL AMOUNTS OF HUSH FIRST</Alert>              \n              <InputGroup>\n                <InputGroupAddon>From Address</InputGroupAddon>\n                <Input type=\"select\" onChange={this.handleUpdateSelectedAddress}>\n                  <option value=''></option>\n                  {sendAddresses}\n                </Input>\n              </InputGroup>\n              <InputGroup>\n                <InputGroupAddon>To Address</InputGroupAddon>\n                <Input onChange={this.handleUpdateRecipientAddress} placeholder=\"e.g t1UDhNq2aEqvxEbPzcRM8n2QJV8YJ664rXJ\" />\n              </InputGroup>\n              <InputGroup>\n                <InputGroupAddon>Amount</InputGroupAddon>\n                <Input onChange={this.handleUpdateAmount} placeholder=\"e.g 42\" />\n              </InputGroup>\n              <InputGroup>\n                <InputGroupAddon>Fee</InputGroupAddon>\n                <Input onChange={this.handleUpdateFee} placeholder=\"e.g 0.001\" />\n              </InputGroup>\n              <br/>\n              <FormGroup check>\n                <Label check>\n                  <Input onChange={this.handleCheckChanged} type=\"checkbox\" />{' '}\n                  Yes, I would like to send these HUSH\n                </Label>\n              </FormGroup> \n              <br/>                           \n              <Button \n                color=\"warning\" className=\"btn-block\"\n                disabled={!this.state.confirmSend || (this.state.sendProgress > 0 && this.state.sendProgress < 100)}\n                onClick={this.handleSendHUSH}\n              >Send</Button>\n            </CardBlock>\n            <CardFooter> \n              {hushTxLink}\n              <Progress value={this.state.sendProgress} />                                  \n            </CardFooter>       \n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass ZWalletSelectUnlockType extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { cSelected: this.props.unlockType }\n  }\n\n  onRadioBtnClick(s){\n    this.setState({\n      cSelected: s\n    })\n\n    this.props.setUnlockType(s)\n  }\n\n  render() {\n    return ( \n      <div style={{textAlign: 'center'}}>  \n        <ButtonGroup vertical>                 \n          <Button color=\"secondary\" onClick={() => this.onRadioBtnClick(UNLOCK_WALLET_TYPE.HD_WALLET)} active={this.state.cSelected === UNLOCK_WALLET_TYPE.HD_WALLET}>Enter secret phrase</Button>\n          <Button color=\"secondary\" onClick={() => this.onRadioBtnClick(UNLOCK_WALLET_TYPE.IMPORT_WALLET)} active={this.state.cSelected === UNLOCK_WALLET_TYPE.IMPORT_WALLET}>Load wallet.dat</Button>        \n          <Button color=\"secondary\" onClick={() => this.onRadioBtnClick(UNLOCK_WALLET_TYPE.PASTE_PRIV_KEY)} active={this.state.cSelected === UNLOCK_WALLET_TYPE.PASTE_PRIV_KEY}>Paste private key</Button>      \n        </ButtonGroup>\n      </div>\n    )\n  }\n}\n\nclass ZPrintableKeys extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selectedPublicAddress: '',\n      selectedPrivateKey: '',  \n    }\n\n    this.handleUpdateSelectedAddress = this.handleUpdateSelectedAddress.bind(this)\n  }\n\n  handleUpdateSelectedAddress(e){\n    const selectedPublicAddress = e.target.value;\n    const selectedPrivateKey = selectedPublicAddress === '' ? '' : this.props.publicAddresses[selectedPublicAddress].privateKeyWIF;\n\n    this.setState({\n      selectedPublicAddress: selectedPublicAddress,\n      selectedPrivateKey: selectedPrivateKey\n    })\n\n    console.log(selectedPrivateKey)\n  }\n\n  render() {\n    var sendAddresses = [];\n    Object.keys(this.props.publicAddresses).forEach(function(key) {\n      if (key !== undefined){        \n        sendAddresses.push(\n          <option value={key}>[{this.props.publicAddresses[key].confirmedBalance}] - {key}</option>                                       \n        )\n      }\n    }.bind(this))\n\n    return (\n      <div>\n        <h3>Printable Wallet</h3>\n          <Input type=\"select\" onChange={this.handleUpdateSelectedAddress}>\n            <option value=''></option>\n            {sendAddresses}\n          </Input>\n          <div>\n            {\n              this.state.selectedPublicAddress === '' ?\n              null :\n              (          \n                <Row style={{textAlign: 'center', paddingTop: '75px', paddingBottom: '25px'}}>              \n                  <Col>\n                    <QRCode value={this.state.selectedPublicAddress} /><br/>\n                    { this.state.selectedPublicAddress }\n                  </Col>\n\n                  <Col>\n                    <QRCode value={this.state.selectedPrivateKey} /><br/>\n                    { this.state.selectedPrivateKey }\n                  </Col>\n                </Row> \n              )           \n            }\n          </div>\n      </div>\n    )\n  }\n}\n\nclass ZWalletTabs extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.toggleTabs = this.toggleTabs.bind(this);\n    this.savePrivateKeys = this.savePrivateKeys.bind(this);\n    this.state = {\n      activeTab: '1'\n    }\n  }\n\n  toggleTabs(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  savePrivateKeys(){\n    // ISO 8601\n    var now = new Date();\n    now = now.toISOString().split('.')[0]+'Z';\n\n    var fileStr = '# Wallet dump created by myhushwallet ' + pjson.version + '\\n'\n    fileStr += '# Created on ' + now + '\\n\\n\\n'\n\n    Object.keys(this.props.publicAddresses).forEach(function(key) {\n      fileStr += this.props.publicAddresses[key].privateKeyWIF\n      fileStr += ' ' + now + ' ' + 'label=' + ' ' + '# addr=' + key\n      fileStr += '\\n'\n    }.bind(this))\n    \n    const pkBlob = new Blob([fileStr], {type: 'text/plain;charset=utf-8'})\n    FileSaver.saveAs(pkBlob, now + '_myhushwallet_private_keys.txt')\n  }\n\n  render () {\n    return (      \n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggleTabs('1'); }}\n            >\n              Info\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggleTabs('2'); }}\n            >\n              Send HUSH\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggleTabs('3'); }}\n            >\n              Export\n            </NavLink>\n          </NavItem>       \n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <ZAddressInfo\n              publicAddresses={this.props.publicAddresses}\n              settings={this.props.settings}\n              setPublicAddressesKeyValue={this.props.setPublicAddressesKeyValue}\n            />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <ZSendHUSH \n              settings={this.props.settings}\n              publicAddresses={this.props.publicAddresses}            \n            />\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col>\n                <Card>                  \n                  <CardBlock>\n                    <ZPrintableKeys publicAddresses={this.props.publicAddresses}/>                  \n                  </CardBlock>                  \n                  <CardBlock>\n                    <h3>Private Key Dump</h3>\n                    <Button \n                      color=\"secondary\" className=\"btn-block\"\n                      onClick={this.savePrivateKeys}                  \n                    >Download Private Keys</Button>\n                  </CardBlock>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>   \n        </TabContent>\n      </div>       \n    )\n  }\n}\n\nexport default class ZWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetKeys = this.resetKeys.bind(this)\n    this.handleUnlockPrivateKeys = this.handleUnlockPrivateKeys.bind(this)\n    this.setPrivateKeys = this.setPrivateKeys.bind(this)        \n    this.setInsightAPI = this.setInsightAPI.bind(this)\n    this.setUnlockType = this.setUnlockType.bind(this)\n    this.setPublicAddressesKeyValue = this.setPublicAddressesKeyValue.bind(this)\n    this.toggleUseTestNet = this.toggleUseTestNet.bind(this)\n    this.toggleCompressPubKey = this.toggleCompressPubKey.bind(this)\n    this.toggleShowSettings = this.toggleShowSettings.bind(this)\n    this.toggleShowWalletGen = this.toggleShowWalletGen.bind(this)     \n\n    this.state = {\n      privateKeys : '',\n      publicAddresses: null, // Public address will be {address: {privateKey: '', transactionURL: '', privateKeyWIF: ''}\n      settings: {\n        showSettings: false,\n        showWalletGen: false,\n        compressPubKey: true,\n        insightAPI: 'https://explorer.myhush.org/api',\n        explorerURL: 'https://explorer.myhush.org/',\n        useTestNet: false,\n        unlockType: UNLOCK_WALLET_TYPE.HD_WALLET\n      }\n    };    \n  }  \n\n  handleUnlockPrivateKeys(){    \n    if (this.state.privateKeys.length === 0){\n      return -2\n    }\n\n    try{\n      var publicAddresses = {}\n\n      function _privKeyToAddr(pk, compressPubKey, useTestNet){\n        // If not 64 length, probs WIF format\n        if (pk.length !== 64){\n          pk = hushjs.address.WIFToPrivKey(pk)          \n        }\n\n        // Convert public key to public address\n        const pubKey = hushjs.address.privKeyToPubKey(pk, compressPubKey)\n\n        // Testnet or nah\n        const pubKeyHash = useTestNet ? hushjs.config.testnet.pubKeyHash : hushjs.config.mainnet.pubKeyHash\n        const publicAddr = hushjs.address.pubKeyToAddr(pubKey, pubKeyHash)\n\n        return publicAddr\n      }\n\n      for (var i = 0; i < this.state.privateKeys.length; i++){\n        const pubKeyHash = this.state.settings.useTestNet ? hushjs.config.testnet.wif : hushjs.config.mainnet.wif\n        \n        var c_pk_wif;\n        var c_pk = this.state.privateKeys[i]\n\n        // If not 64 length, probs WIF format\n        if (c_pk.length !== 64){\n          c_pk_wif = c_pk\n          c_pk = hushjs.address.WIFToPrivKey(c_pk)\n        }\n        else{\n          c_pk_wif = hushjs.address.privKeyToWIF(c_pk)\n        }          \n\n        var c_pk_wif = hushjs.address.privKeyToWIF(c_pk, true, pubKeyHash)        \n        const c_addr = _privKeyToAddr(c_pk, this.state.settings.compressPubKey, this.state.settings.useTestNet)        \n\n        publicAddresses[c_addr] = {\n          privateKey: c_pk,\n          privateKeyWIF: c_pk_wif,          \n          confirmedBalance: 'loading...',\n          unconfirmedBalance: 'loading...',  \n        }\n      }      \n\n      // Set public address\n      this.setPublicAddresses(publicAddresses)\n\n      // Return success\n      return 0\n    } catch(err) {      \n      this.setPublicAddresses(null)\n      return -1\n    }\n  }\n\n  resetKeys(){\n    this.setState({\n      privateKeys : '',\n      publicAddresses: null,\n    })\n  }  \n\n  // Only used for bip32 gen wallet because\n  // of the async nature\n  setPrivateKeys(pk, handleUnlockingKeys){\n    if (handleUnlockingKeys === undefined){\n      handleUnlockingKeys = false\n    }\n    this.setState({\n      privateKeys: pk\n    }, handleUnlockingKeys ? this.handleUnlockPrivateKeys : undefined)\n  }\n\n  setPublicAddresses(pa){\n    this.setState({\n      publicAddresses: pa\n    })\n  }\n\n  setPublicAddressesKeyValue(address, key, value){\n    var newPublicAddresses = this.state.publicAddresses\n    newPublicAddresses[address][key] = value\n\n    this.setState({\n      publicAddresses: newPublicAddresses\n    })\n  }\n\n  setInsightAPI(uri){    \n    var _settings = this.state.settings\n    _settings.insightAPI = uri\n\n    this.setState({\n      _settings: _settings\n    })\n  }  \n\n  setUnlockType(t){\n    var _settings = this.state.settings\n    _settings.unlockType = t\n\n    this.setState({\n      _settings: _settings\n    })\n  }\n\n  toggleCompressPubKey(b){\n    var _settings = this.state.settings\n    _settings.compressPubKey = !_settings.compressPubKey    \n\n    this.setState({\n      _settings: _settings\n    })\n  }\n\n  toggleUseTestNet(){\n    var _settings = this.state.settings\n    _settings.useTestNet = !_settings.useTestNet\n\n    if (_settings.useTestNet){\n        _settings.insightAPI = 'https://explorer.testnet.myhush.org/api'\n      _settings.explorerURL = 'https://explorer.testnet.myhush.org/'\n    }\n    else{\n        _settings.insightAPI = 'https://explorer.myhush.org/api'\n        _settings.explorerURL = 'https://explorer.myhush.org/'\n    }\n\n    this.setState({\n      settings: _settings\n    })    \n  }\n\n  toggleShowSettings(){\n    var _settings = this.state.settings\n    _settings.showSettings = !_settings.showSettings\n\n    this.setState({\n      settings: _settings\n    })\n  }\n\n  toggleShowWalletGen(){\n    var _settings = this.state.settings\n    _settings.showWalletGen = !_settings.showWalletGen\n\n    this.setState({\n      settings: _settings\n    })\n  }\n\n\n  //<h1 className='display-6'>Hush Wallet&nbsp;\n  render() {        \n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 >\n              <ToolTipButton onClick={this.toggleShowSettings} id={1} buttonText={<MdSettings/>} tooltipText={'settings'}/>&nbsp;\n              <ToolTipButton disabled={this.state.publicAddresses === null} onClick={this.resetKeys} id={2} buttonText={<FaRedo/>} tooltipText={'reset wallet'}/>\n            </h1>\n            <ZWalletSettings \n              setUnlockType={this.setUnlockType}              \n              toggleShowSettings={this.toggleShowSettings}\n              toggleCompressPubKey={this.toggleCompressPubKey}           \n              toggleShowWalletGen={this.toggleShowWalletGen}\n              toggleUseTestNet={this.toggleUseTestNet}              \n              setInsightAPI={this.setInsightAPI}\n              settings={this.state.settings}\n              publicAddresses={this.state.publicAddresses}\n            />\n            <br/>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            { this.state.publicAddresses === null ?\n              (                                              \n                <ZWalletUnlockKey\n                handleUnlockPrivateKeys={this.handleUnlockPrivateKeys}\n                setPrivateKeys={this.setPrivateKeys}\n                unlockType={this.state.settings.unlockType}\n                />                \n              )\n              :\n              (<ZWalletTabs\n                publicAddresses={this.state.publicAddresses}\n                settings={this.state.settings}\n                setPublicAddressesKeyValue={this.setPublicAddressesKeyValue}\n                privateKeys={this.state.privateKeys}\n              />)\n            }\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            { this.state.settings.showWalletGen ?\n              (<div><br/><hr/><ZWalletGenerator settings={this.state.settings}/></div>) : null\n            }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}","var bitcoinjs = require('bitcoinjs-lib');\nvar bip32utils = require('bip32-utils');\nvar hushjs = require('hushjs');\nvar bs58check = require('bs58check');\n\n// Hierarchical Deterministic wallet\nfunction phraseToHDWallet(phraseStr) {\n  // Seed key, make it fucking strong\n  // phraseStr: string\n  const seedHex = Buffer.from(phraseStr).toString('hex')\n\n  // chains\n  const hdNode = bitcoinjs.HDNode.fromSeedHex(seedHex)\n  var chain = new bip32utils.Chain(hdNode)\n\n  // Creates 42 address from the same chain\n  for (var k = 0; k < 42; k++){\n    chain.next()\n  }\n\n  // Get private keys from them\n  var privateKeys = chain.getAll().map((x) => chain.derive(x).keyPair.toWIF())\n  \n  return privateKeys\n}\n\n\nexport default {\n  phraseToHDWallet: phraseToHDWallet  \n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  root: {\n    fontWeight: 300\n  },\n  header: {\n    backgroundColor: '#2d2d2d',\n    color: 'white',\n    padding: '20px',\n    fontSize: '1.5em',\n  }\n}\n\nconst SideBarPanel = props => {\n  const rootStyle = props.style\n    ? { ...styles.root, ...props.style }\n    : styles.root\n\n  return (\n    <div style={rootStyle}>\n      <div style={styles.header}>{props.title}</div>\n      {props.children}\n    </div>\n  )\n}\n\nSideBarPanel.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  children: PropTypes.object\n}\n\nexport default SideBarPanel\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SideBarPanel from './SideBarPanel'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n      sidebar: {\r\n        width: 256,\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      },\r\n      sidebarLink: {\r\n        display: 'block',\r\n        padding: '16px 0px',\r\n        color: '#757575',\r\n        textDecoration: 'none',\r\n        //cursor: 'pointer'\r\n      },\r\n      divider: {\r\n        margin: '8px 0',\r\n        height: 1,\r\n        backgroundColor: '#757575'\r\n      },\r\n      content: {\r\n        padding: '16px',\r\n        flexGrow: '1',\r\n        backgroundColor: 'white'\r\n      }\r\n}\r\n\r\n// Menu divider\r\n// <div style={styles.divider} />\r\n\r\nconst SidebarContent = props => {\r\n  const style = props.style\r\n    ? { ...styles.sidebar, ...props.style }\r\n    : styles.sidebar\r\n\r\n  return (\r\n    <SideBarPanel title={'Menu'} style={style}>\r\n      <div style={styles.content}>\r\n        <Link to='/'style={styles.sidebarLink}>Wallet</Link>\r\n        <Link to='/getting_started'style={styles.sidebarLink}>Getting started</Link>\r\n        <Link to='/faq'style={styles.sidebarLink}>FAQ</Link>\r\n        <Link to='/contact'style={styles.sidebarLink}>Contact</Link>\r\n      </div>\r\n    </SideBarPanel>\r\n  )\r\n}\r\n\r\nSidebarContent.propTypes = {\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default SidebarContent\r\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nexport default class ZFaq extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n          <h2>Faq</h2>\n            <p>\n              <b>Q: Are my private keys secured?</b>\n              <br/>\n              A: Yes they are secured, your private keys never leave your browser.\n            </p>\n\n            <p>\n              <b>Q: How is this secure? Its on a web browser!</b>\n              <br/>\n              A: My Hush Wallet has replicated the core features of the HUSH\n              daemon in JavaScript! So the process of creating and signing the\n              transactions are all done within the browser. No sensitive\n              information is sent through the network.\n            </p>\n\n            <p>\n              <b>Q: Can I have the source code?</b>\n              <br/>\n              A:{\" \"}\n              <a href=\"https://github.com/myhush/myhushwallet\">Here you go</a>\n            </p>\n\n            <p>\n              <b>Q: Why are you doing this?</b>\n              <br/>\n              A: My Hush Wallet was inspired by{\" \"}\n              <a href=\"https://myzenwallet.io/\">MyZenWallet's</a> which was\n              inspired by{\" \"}\n              <a href=\"https://myetherwallet.com\">MyEtherWallet's.</a> We also\n              want to provide the people the ability to interact with the HUSH\n              blockchain easily, without having to run a full node.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap';\n\n//import FAUnlock from 'react-icons/lib/fa/unlock-alt'\n//import MDSettings from 'react-icons/lib/md/settings'\n\n//Click the <code>Unlock Button</code> (<FAUnlock/>) on the right.</li>\n\n//For those with a <code>wallet.dat</code> file generated by GUI wallets. Click <code>settings</code> (<MDSettings/>), select the <code>Load wallet.dat</code> option and load your <code>wallet.dat</code> file</li>\n//To unlock a single address, Click <code>settings</code> (<MDSettings/>), select the <code>Paste private key</code> option, paste in your private key and click the unlock button (<FAUnlock/>)</li>\n\n\nexport default class ZGuide extends React.Component {\n  render () {\n    return (      \n      <Container>      \n        <Row>\n          <Col>\n          <h2>Getting Started</h2>\n\n                            \n            <h3>1. Creating a new wallet</h3>\n            <ul>\n              <li>Go to <a href=\"https://wallet.myhush.org\">https://wallet.myhush.org</a></li>\n              <li>Enter a strong but easy to remember secret phrase. Save this somewhere and do NOT forget it.</li>\n              <li>Click the <code>Unlock Button</code> (ICI) on the right.</li>\n\n                <ul><li>This creates a <a href=\"https://en.bitcoin.it/wiki/Deterministic_wallet\">deterministic wallet</a> based on your secret phrase.</li></ul>                        \n            </ul>\n\n            <br/>\n\n            <h3>2. Accessing an existing wallet</h3>\n            <ul>\n              <li>If you've created a wallet on <a href=\"https://wallet.myhush.org\">https://wallet.myhush.org</a> via the secret phrase, simply re-enter the same phrase.</li>\n              <li>For those with a <code>wallet.dat</code> file generated by GUI wallets. Click <code>settings</code> ), select the <code>Load wallet.dat</code> option and load your <code>wallet.dat</code> file</li>\n              <li>To unlock a single address, Click <code>settings</code> (ICI), select the <code>Paste private key</code> option, paste in your private key and click the unlock button (ICI)</li>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nexport default class ZContact extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n          <h2>Contact</h2>\n            <p>\n              <b>JOIN US!</b>\n              <br/>\n              <br/>\n              <b>Hush</b> is a community project. Everyone is welcomed with open arms!\n            </p>\n\n            <p>\n              <br/>\n              <b>Add logo of Website, Discord, Twitter, Reddit, Bitcoin Talk and GitHub</b>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, {Component} from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Wallet from './pages/Wallet'\nimport Faq from './pages/Faq'\nimport Getting_started from './pages/Guide'\nimport Contact from './pages/Contact'\n\n// This is the main routing for the application\nclass MainRouter extends Component {\n  render () {\n    return (\n      <main>\n        <Switch>\n          <Route exact path='/' component={Wallet}/>\n          <Route exact path='/faq' component={Faq}/>\n          <Route exact path='/getting_started' component={Getting_started}/>\n          <Route exact path='/contact' component={Contact}/>\n        </Switch>\n      </main>\n    )\n  }\n}\n\nexport default MainRouter\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-table/react-table.css'\r\nimport React, {Component} from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport SideBarContent from './SideBarContent'\r\nimport MainRouter from './MainRouter'\r\nimport SideBarPanel from './SideBarPanel'\r\n\r\n// Font Awesome icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n// Adding all icons to the library\r\nlibrary.add(fas, far, fab)\r\n\r\nconst styles = {\r\n  contentHeaderMenuLink: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    padding: 8\r\n  },\r\n  headerIcons: {\r\n    color: 'white'\r\n  },\r\n  contentHeaderTitle: {\r\n    float: 'right'\r\n  },\r\n\r\n  content: {\r\n    padding: \"16px\"\r\n  }\r\n}\r\n\r\nconst mql = window.matchMedia(`(min-width: 800px)`);\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n\r\n    this.state = {\r\n      docked: mql.matches,\r\n      open: false,\r\n      transitions: true,\r\n      touch: true,\r\n      shadow: true,\r\n      pullRight: false,\r\n      touchHandleWidth: 20,\r\n      dragToggleDistance: 30\r\n};\r\n\r\n    this.mediaQueryChanged = this.mediaQueryChanged.bind(this);\r\n    this.toggleOpen = this.toggleOpen.bind(this);\r\n    this.onSetOpen = this.onSetOpen.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  onSetOpen(open) {\r\n    this.setState({ open });\r\n  }\r\n\r\n  mediaQueryChanged() {\r\n    this.setState({\r\n      docked: mql.matches,\r\n      open: false\r\n    });\r\n  }\r\n\r\n  toggleOpen(ev) {\r\n    this.setState({ open: !this.state.open });\r\n\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  render () {\r\n    const sidebar = <SideBarContent />\r\n\r\n    const contentHeader = (\r\n      <span>\r\n        {!this.state.docked && (\r\n          <a\r\n            onClick={this.toggleOpen}\r\n            href=\"Menu\"\r\n            style={styles.contentHeaderMenuLink}\r\n          >\r\n            <FontAwesomeIcon icon={'bars'} style={styles.headerIcons} />\r\n          </a>\r\n        )}\r\n        <span> Hush Wallet</span>\r\n      </span>\r\n    )\r\n\r\n    const sidebarProps = {\r\n sidebar,\r\n      docked: this.state.docked,\r\n      open: this.state.open,\r\n      onSetOpen: this.onSetOpen    }\r\n\r\n    return (\r\n      <Sidebar {...sidebarProps}>\r\n        <SideBarPanel title={contentHeader}>\r\n          <div style={styles.content}>\r\n            <MainRouter />\r\n          </div>\r\n        </SideBarPanel>\r\n      </Sidebar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App'\n\n// For faster load times\nimport registerServiceWorker from './registerServiceWorker'\n\n// Main CSS\nimport './index.css'\n\n// Main app picked up by the index.html file\nrender((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\nregisterServiceWorker();\n","import Promise from 'bluebird'\n\n// Append url\nfunction urlAppend(url, param){\n  if (url.substr(-1) !== '/'){\n    url = url + '/'\n  }\n\n  return url + param\n}\n\n// Debounce promise\nfunction promiseDebounce(fn, delay, count) {\n  var working = 0, queue = [];\n  function work() {\n    if ((queue.length === 0) || (working === count)) return;\n    working++;\n    Promise.delay(delay).tap(function () { working--; }).then(work);\n    var next = queue.shift();\n    next[2](fn.apply(next[0], next[1]));\n  }\n  return function debounced() {\n    var args = arguments;\n    return new Promise(function(resolve){\n      queue.push([this, args, resolve]);\n      if (working < count) work();\n    }.bind(this));\n  }\n}\n\nexport default {\n  promiseDebounce: promiseDebounce,\n  urlAppend: urlAppend\n}"],"sourceRoot":""}